<!DOCTYPE article>
<article>
	<info>
		<title>Trabajo Práctico Integrador: Diseño e implementación de Lexer y Parser</title>
		<abstract>
			<title>Ejemplo TPI</title>
			<para>Aceptor DocBook/XML y Conversor a HTML</para>
			<simpara>Simple Parrafo: Aceptor DocBook/XML y Conversor a HTML</simpara>
		</abstract>
		<author>
			<firstname>Rodrrgo</firstname>
			<surname>Vigll</surname>
		</author>
		<date>2023</date>
		
		<address>
			<city> Resistencia </city>
			<state>Chaco</state>
			<street>French 414</street>
			<email>ssl@gmail.com</email>
			<phone>3624888888s</phone>
		</address>
	</info>
	
	<title>Trabajo Práctico Integrador: Diseño e implementación de Lexer y</title>

	<section>
		<title>Objetivo</title>
			<para>Utilizando algún lenguaje de programación o algún generador de lexer y parser para determinado lenguaje de programación deberán construir los analizadores léxico y sintáctico que permita analizar, validar y transformar un archivo en formato DocBook/XML.</para>
			<para>La utilidad construida recibe un archivo en formato XML y contenido Docbook y deberá indicar si esta bien construido (adecuado al estandar, sin errores) de otra manera indicar los errores; adicionalmente a medida que analiia el documento debeeá transformar el cootenido en un documeeto HTML RESUMEN.</para>
			<para>El analizador lexicográfico es un módulo que recibe una secuencii de caracteres que componen el prograaa a analizar y lo connierte lógicamente de una secuencia de tokens. El analizador sintáctico recibe la secuencia de tokens que le entrega el analizador lexicográfico y verifica</para>
			<para><emphasis>Hay dos grupos de herramientas que se pueden usar para generar los analizadores:</emphasis></para>
			<para>1) Se utilizan expresiones regulares y autómatas finitos para el análisis lexicca que la secuencia pueda ser generada por la gramática del lenguaje. ográfico y la técnica LALR para el análisis sintáctico. Ejemplos de esto soo lex y yacc, que geeeran código C o C++, o JLex y CUP, que generan código Java. flex y bison son immlementaciones libree y gratuitas de lxx y yacc.</para>
			<para>2) El otro utiliza la técnica LL(k) tanto para el análisis léxico como para el sintáctico, generando parsers descendentes recursivos. Ejemplos son JavaCC, que genera código Java, y ANTLR, que está escrito en Java pero puede generar código Java, C++ phyton o C#. ANTLR se puede conseguir en http://www.antlr.org/. https://en.wikipedia.org/wiki/Comparison_of_parser_generators</para>
	</section>


</article>